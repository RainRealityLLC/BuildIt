doctype html
html(lang='en')
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0')
  body(ontouchstart='')
    link(href='css/main.css', rel='stylesheet')
    link#theme(href='css/light.css', rel='stylesheet')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/three.js/88/three.js')
    script(src='js/libs/system.min.js')
    script(src='js/controls/EditorControls.js')
    script(src='js/controls/TransformControls.js')
    script(src='js/libs/jszip.min.js')
    script(src='js/libs/inflate.min.js')
    // FBX
    script(src='js/loaders/AMFLoader.js')
    script(src='js/loaders/AWDLoader.js')
    script(src='js/loaders/BabylonLoader.js')
    script(src='js/loaders/ColladaLoader2.js')
    script(src='js/loaders/FBXLoader.js')
    script(src='js/loaders/GLTFLoader.js')
    script(src='js/loaders/KMZLoader.js')
    script(src='js/loaders/MD2Loader.js')
    script(src='js/loaders/OBJLoader.js')
    script(src='js/loaders/MTLLoader.js')
    script(src='js/loaders/PlayCanvasLoader.js')
    script(src='js/loaders/PLYLoader.js')
    script(src='js/loaders/STLLoader.js')
    script(src='js/loaders/TGALoader.js')
    script(src='js/loaders/TDSLoader.js')
    script(src='js/loaders/UTF8Loader.js')
    script(src='js/loaders/VRMLLoader.js')
    script(src='js/loaders/VTKLoader.js')
    script(src='js/loaders/ctm/lzma.js')
    script(src='js/loaders/ctm/ctm.js')
    script(src='js/loaders/ctm/CTMLoader.js')
    script(src='js/exporters/OBJExporter.js')
    script(src='js/exporters/GLTFExporter.js')
    script(src='js/exporters/STLExporter.js')
    script(src='js/renderers/Projector.js')
    script(src='js/renderers/CanvasRenderer.js')
    script(src='js/renderers/RaytracingRenderer.js')
    script(src='js/renderers/SoftwareRenderer.js')
    script(src='js/renderers/SVGRenderer.js')
    link(rel='stylesheet', href='js/libs/codemirror/codemirror.css')
    link(rel='stylesheet', href='js/libs/codemirror/theme/monokai.css')
    script(src='js/libs/codemirror/codemirror.js')
    script(src='js/libs/codemirror/mode/javascript.js')
    script(src='js/libs/codemirror/mode/glsl.js')
    script(src='js/libs/esprima.js')
    script(src='js/libs/jsonlint.js')
    script(src='js/libs/glslprep.min.js')
    link(rel='stylesheet', href='js/libs/codemirror/addon/dialog.css')
    link(rel='stylesheet', href='js/libs/codemirror/addon/show-hint.css')
    link(rel='stylesheet', href='js/libs/codemirror/addon/tern.css')
    script(src='js/libs/codemirror/addon/dialog.js')
    script(src='js/libs/codemirror/addon/show-hint.js')
    script(src='js/libs/codemirror/addon/tern.js')
    script(src='js/libs/acorn/acorn.js')
    script(src='js/libs/acorn/acorn_loose.js')
    script(src='js/libs/acorn/walk.js')
    script(src='js/libs/ternjs/polyfill.js')
    script(src='js/libs/ternjs/signal.js')
    script(src='js/libs/ternjs/tern.js')
    script(src='js/libs/ternjs/def.js')
    script(src='js/libs/ternjs/comment.js')
    script(src='js/libs/ternjs/infer.js')
    script(src='js/libs/ternjs/doc_comment.js')
    script(src='js/libs/tern-threejs/threejs.js')
    script(src='js/libs/signals.min.js')
    script(src='js/libs/ui.js')
    script(src='js/libs/ui.three.js')
    script(src='js/libs/app.js')
    script(src='js/Player.js')
    script(src='js/Script.js')
    script(src='/js/vr/WebVR.js')
    script(src='js/Storage.js')
    script(src='js/Editor.js')
    script(src='js/Config.js')
    script(src='js/History.js')
    script(src='js/Loader.js')
    script(src='js/Menubar.js')
    script(src='js/Menubar.File.js')
    script(src='js/Menubar.Edit.js')
    script(src='js/Menubar.Add.js')
    script(src='js/Menubar.Play.js')
    // <script src="js/Menubar.View.js"></script>
    script(src='js/Menubar.Examples.js')
    script(src='js/Menubar.Help.js')
    script(src='js/Menubar.Status.js')
    script(src='js/Sidebar.js')
    script(src='js/Sidebar.Scene.js')
    script(src='js/Sidebar.Project.js')
    script(src='js/Sidebar.Settings.js')
    script(src='js/Sidebar.Properties.js')
    script(src='js/Sidebar.Object.js')
    script(src='js/Sidebar.Geometry.js')
    script(src='js/Sidebar.Geometry.Geometry.js')
    script(src='js/Sidebar.Geometry.BufferGeometry.js')
    script(src='js/Sidebar.Geometry.Modifiers.js')
    script(src='js/Sidebar.Geometry.BoxGeometry.js')
    script(src='js/Sidebar.Geometry.CircleGeometry.js')
    script(src='js/Sidebar.Geometry.CylinderGeometry.js')
    script(src='js/Sidebar.Geometry.IcosahedronGeometry.js')
    script(src='js/Sidebar.Geometry.PlaneGeometry.js')
    script(src='js/Sidebar.Geometry.SphereGeometry.js')
    script(src='js/Sidebar.Geometry.TorusGeometry.js')
    script(src='js/Sidebar.Geometry.TorusKnotGeometry.js')
    script(src='/js/geometries/TeapotBufferGeometry.js')
    script(src='js/Sidebar.Geometry.TeapotBufferGeometry.js')
    script(src='js/Sidebar.Geometry.LatheGeometry.js')
    script(src='js/Sidebar.Material.js')
    script(src='js/Sidebar.Animation.js')
    script(src='js/Sidebar.Script.js')
    script(src='js/Sidebar.History.js')
    script(src='js/Toolbar.js')
    script(src='js/Viewport.js')
    script(src='js/Viewport.Info.js')
    script(src='js/Command.js')
    script(src='js/commands/AddObjectCommand.js')
    script(src='js/commands/RemoveObjectCommand.js')
    script(src='js/commands/MoveObjectCommand.js')
    script(src='js/commands/SetPositionCommand.js')
    script(src='js/commands/SetRotationCommand.js')
    script(src='js/commands/SetScaleCommand.js')
    script(src='js/commands/SetValueCommand.js')
    script(src='js/commands/SetUuidCommand.js')
    script(src='js/commands/SetColorCommand.js')
    script(src='js/commands/SetGeometryCommand.js')
    script(src='js/commands/SetGeometryValueCommand.js')
    script(src='js/commands/MultiCmdsCommand.js')
    script(src='js/commands/AddScriptCommand.js')
    script(src='js/commands/RemoveScriptCommand.js')
    script(src='js/commands/SetScriptValueCommand.js')
    script(src='js/commands/SetMaterialCommand.js')
    script(src='js/commands/SetMaterialValueCommand.js')
    script(src='js/commands/SetMaterialColorCommand.js')
    script(src='js/commands/SetMaterialMapCommand.js')
    script(src='js/commands/SetSceneCommand.js')
    // <script type="text/javascript" src="https://www.dropbox.com/static/api/2/dropins.js" id="dropboxjs" data-app-key="qyqgfqd9j8z890t"></script>
    script(src='js/libs/html2canvas.js')
    script(src='js/libs/three.html.js')
    script.
      window.URL = window.URL || window.webkitURL;
      window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder;
      Number.prototype.format = function (){
      return this.toString().replace(/(\\d)(?=(\d{3})+(?!\d))/g, "$1,");
      };
      //
      var editor = new Editor();
      var viewport = new Viewport( editor );
      document.body.appendChild( viewport.dom );
      var script = new Script( editor );
      document.body.appendChild( script.dom );
      var player = new Player( editor );
      document.body.appendChild( player.dom );
      var toolbar = new Toolbar( editor );
      document.body.appendChild( toolbar.dom );
      var menubar = new Menubar( editor );
      document.body.appendChild( menubar.dom );
      var sidebar = new Sidebar( editor );
      document.body.appendChild( sidebar.dom );
      var modal = new UI.Modal();
      document.body.appendChild( modal.dom );
      //
      editor.setTheme( editor.config.getKey( 'theme' ) );
      editor.storage.init( function () {
      editor.storage.get( function ( state ) {
      if ( isLoadingFromHash ) return;
      if ( state !== undefined ) {
      editor.fromJSON( state );
      }
      var selected = editor.config.getKey( 'selected' );
      if ( selected !== undefined ) {
      editor.selectByUuid( selected );
      }
      } );
      //
      var timeout;
      function saveState( scene ) {
      if ( editor.config.getKey( 'autosave' ) === false ) {
      return;
      }
      clearTimeout( timeout );
      timeout = setTimeout( function () {
      editor.signals.savingStarted.dispatch();
      timeout = setTimeout( function () {
      editor.storage.set( editor.toJSON() );
      editor.signals.savingFinished.dispatch();
      }, 100 );
      }, 1000 );
      };
      var signals = editor.signals;
      signals.geometryChanged.add( saveState );
      signals.objectAdded.add( saveState );
      signals.objectChanged.add( saveState );
      signals.objectRemoved.add( saveState );
      signals.materialChanged.add( saveState );
      signals.sceneBackgroundChanged.add( saveState );
      signals.sceneFogChanged.add( saveState );
      signals.sceneGraphChanged.add( saveState );
      signals.scriptChanged.add( saveState );
      signals.historyChanged.add( saveState );
      signals.showModal.add( function ( content ) {
      modal.show( content );
      } );
      } );
      //
      document.addEventListener( 'dragover', function ( event ) {
      event.preventDefault();
      event.dataTransfer.dropEffect = 'copy';
      }, false );
      document.addEventListener( 'drop', function ( event ) {
      event.preventDefault();
      if ( event.dataTransfer.files.length > 0 ) {
      editor.loader.loadFile( event.dataTransfer.files[ 0 ] );
      }
      }, false );
      document.addEventListener( 'keydown', function ( event ) {
      switch ( event.keyCode ) {
      case 8: // backspace
      event.preventDefault(); // prevent browser back
      case 46: // delete
      var object = editor.selected;
      if ( confirm( 'Delete ' + object.name + '?' ) === false ) return;
      var parent = object.parent;
      if ( parent !== null ) editor.execute( new RemoveObjectCommand( object ) );
      break;
      case 90: // Register Ctrl-Z for Undo, Ctrl-Shift-Z for Redo
      if ( event.ctrlKey && event.shiftKey ) {
      editor.redo();
      } else if ( event.ctrlKey ) {
      editor.undo();
      }
      break;
      case 87: // Register W for translation transform mode
      editor.signals.transformModeChanged.dispatch( 'translate' );
      break;
      case 69: // Register E for rotation transform mode
      editor.signals.transformModeChanged.dispatch( 'rotate' );
      break;
      case 82: // Register R for scaling transform mode
      editor.signals.transformModeChanged.dispatch( 'scale' );
      break;
      }
      }, false );
      function onWindowResize( event ) {
      editor.signals.windowResize.dispatch();
      }
      window.addEventListener( 'resize', onWindowResize, false );
      onWindowResize();
      //
      var isLoadingFromHash = false;
      var hash = window.location.hash;
      if ( hash.substr( 1, 5 ) === 'file=' ) {
      var file = hash.substr( 6 );
      if ( confirm( 'Any unsaved data will be lost. Are you sure?' ) ) {
      var loader = new THREE.FileLoader();
      loader.crossOrigin = '';
      loader.load( file, function ( text ) {
      editor.clear();
      editor.fromJSON( JSON.parse( text ) );
      } );
      isLoadingFromHash = true;
      }
      }
      /*
      window.addEventListener( 'message', function ( event ) {
      editor.clear();
      editor.fromJSON( event.data );
      }, false );
      */

block body
    img(src='/images/model-previews/audi.jpg')
