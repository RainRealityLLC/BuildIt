html
  head
    meta(charset='utf-8')
    title Rain Reality BuildIt WebTool
  body
    canvas
    script(src='http://cdnjs.cloudflare.com/ajax/libs/three.js/84/three.min.js')
    script.
      var camera, scene, renderer, controls;
      var geometry, material, mesh;
      function init() {
      camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 10000 );
      camera.position.z = 3;
      scene = new THREE.Scene();
      scene.background = new THREE.Color( 0xadd8e6 );
      //controls = new THREE.OrbitControls(camera, renderer.domElement);
      //controls.addEventListener('change', render);
      geometry = new THREE.SphereGeometry( 1 );
      material = new THREE.MeshBasicMaterial( { color: 0x000000, wireframe: true } );
      geometry.name = "Sphere";
      mesh = new THREE.Mesh( geometry, material );
      scene.add( mesh );
      renderer = new THREE.WebGLRenderer( { antialias: true } );
      renderer.setSize( window.innerWidth/2, window.innerHeight/2 );
      document.body.appendChild( renderer.domElement );
      }
      //chicken
      /*function addText() {
      var loader = new THREE.FontLoader();
      loader.load(
      'fonts/helvetiker_regular.typeface.json', function(font) {
      var textStuff = new THREE.TextGeometry("Enter Text in OpenControls", {
      font: font,
      size: 30,
      height: 5,
      curveSegments: 12,
      bevelEnabled: true,
      bevelThickness: 5,
      bevelSize: 5,
      bevelSegments: 5
      } );
      } );
      scene.add (textStuff);
      }
      */
      function animate( time ) {
      requestAnimationFrame( animate );
      render();
      /*if ( currentLabel )
      {
      currentLabel.lookAt( camera.position );
      }*/
      }
      function render() {
      renderer.render(scene, camera);
      }
      init();
      requestAnimationFrame( animate );
    script.
      //ROTATES THE OBJECT
      var rotObjectMatrix;
      var xAxis = new THREE.Vector3(1,0,0);
      var yAxis = new THREE.Vector3(0,1,0);
      function rotateAroundObjectAxis(object, axis, radians) {
      rotObjectMatrix = new THREE.Matrix4();
      rotObjectMatrix.makeRotationAxis(axis.normalize(), radians);
      object.matrix.multiply(rotObjectMatrix);
      object.rotation.setFromRotationMatrix(object.matrix);
      }
      function rotateCC() {
      rotateAroundObjectAxis(mesh, yAxis, Math.PI / 60);
      }
      function rotateC() {
      rotateAroundObjectAxis(mesh, yAxis, -Math.PI / 60);
      }
    script.
      //CHANGES THE POSITION OF THE OBJECT (Y-AXIS)
      function move(object, distance) {
      object.position.y += distance;
      }
      function moveUp() {
      move(mesh, 0.1);
      }
      function moveDown(){
      move(mesh, -0.1);
      }
    script.
      function moveLR(object, distance) {
      object.position.x += distance;
      }
      function moveRight() {
      moveLR(mesh, 0.1);
      pressTime();
      }
      function moveLeft() {
      moveLR(mesh, -0.1);
      }
    script.
      function scale(object, multiplier) {
      object.scale.x += multiplier;
      object.scale.y += multiplier;
      object.scale.z += multiplier;
      }
      function scaleBig() {
      scale(mesh, 0.1);
      }
      function scaleSmall() {
      scale(mesh, -0.1);
      }
    script.
      function addText() {
      var loader = new THREE.FontLoader();
      loader.load(
      'fonts/helvetiker_regular.typeface.json', function(font) {
      var geometry = new THREE.TextGeometry("Enter Text in OpenControls", {
      font: font,
      size: 30,
      height: 5,
      curveSegments: 12,
      bevelEnabled: true,
      bevelThickness: 5,
      bevelSize: 5,
      bevelSegments: 5
      } );
      } );
      }
    button#btn(onclick='rotateCC()') Rotate Counter Clockwise
    button(onclick='rotateC()') Rotate Clockwise
    button(onclick='moveUp()') Move Up
    button(onclick='moveDown()') Move Down
    button(onclick='moveRight()') Move Right
    button(onclick='moveLeft()') Move Left
    button(onclick='scaleBig()') Scale Bigger
    button(onclick='scaleSmall()') Scale Smaller
    button(onclick='addText()') Add Text
    p#userText
    |       //try something with transform controls for this ^ (reference bookmark)
