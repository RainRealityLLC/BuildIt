doctype html
html(lang='en')
  head
    title three.js webgl - geometry - cube
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0')
    style.
      body {
      margin: 0px;
      background-color: #000000;
      overflow: hidden;
      }
  body
    script(src='http://cdnjs.cloudflare.com/ajax/libs/three.js/84/three.min.js')
    script.
      var camera, scene, renderer;
      var mesh;
      init();
      animate();
      function init() {
      camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 1, 3000 );
      camera.position.set( 1700, 750, 20 );
      camera.lookAt( new THREE.Vector3( 0, 200, 0 ) );
      scene = new THREE.Scene();
      var light = new THREE.DirectionalLight( 0xffffff, 2 );
      light.position.set( 1, 1, 1 );
      scene.add( light );
      var geometry = new THREE.BoxBufferGeometry( 2000, 100, 2000 );
      var material = new THREE.MeshBasicMaterial( { color: 0xffffff} );
      mesh = new THREE.Mesh( geometry, material );
      scene.add( mesh );
      renderer = new THREE.WebGLRenderer();
      renderer.setPixelRatio( window.devicePixelRatio );
      renderer.setSize( window.innerWidth, window.innerHeight );
      document.body.appendChild( renderer.domElement );
      //
      window.addEventListener( 'resize', onWindowResize, false );
      }
      function onWindowResize() {
      camera.aspect = window.innerWidth / window.innerHeight;
      camera.updateProjectionMatrix();
      renderer.setSize( window.innerWidth, window.innerHeight );
      }
      function animate() {
      requestAnimationFrame( animate );
      //mesh.rotation.x += 0.005;
      //mesh.rotation.y += 0.01;
      renderer.render( scene, camera );
      }
